#!/usr/bin/ruby

home = ENV['HOME']

cache_folder = "#{home}/.cache/simplecron"
config_folder = "#{home}/.config/simplecron"

`mkdir -p #{cache_folder}`

config_file = "#{config_folder}/config"

require 'date'

def is_enabled?
  true if `crontab -l 2>/dev/null`.include? '/usr/bin/simplecron'
end

def enable_simplecron
  cmd = '* * * * * /usr/bin/simplecron run' 
  setup = "(crontab -l 2>/dev/null; echo '#{cmd}') | crontab -"
  `#{setup} > /dev/null`
end

def disable_simplecron
  entry = ''
  `crontab -l 2>/dev/null`.split("\n").each do |task|
    entry += "#{task}\n" unless task.include? '/usr/bin/simplecron'
 end
  setup = "(echo '#{entry.strip}') | crontab -"
  `#{setup} > /dev/null`
end

def time_now
  DateTime.now.strftime('%s').to_i
end

def read_data(control_file)
  time_sucess = 0
  time_try = 0
  fail_count = 0
  time_sucess, time_try, fail_count = File.read(control_file).split if File.file? control_file
  return time_sucess.to_i, time_try.to_i, fail_count.to_i
end

def convert_to_seconds(period)
  return period.delete('m').to_f * 60     if period.include?('m')
  return period.delete('h').to_f * 3600   if period.include?('h')
  return period.delete('d').to_f * 86400  if period.include?('d')
  return period.delete('w').to_f * 604800 if period.include?('w')
end

def log_stamp(job)
  ":: #{Time.now.round(0)}\n"
end

def delay(fail_count)
  value = 600
  value = 3600 if fail_count > 6
  return value
end

option = ARGV[0]
option ||= 'status'

case option

when 'status'
  puts 'simplecron is enabled' if is_enabled?
  puts 'simplecron is disabled' unless is_enabled?

when 'enable'
  exit 0 if is_enabled?
  
  enable_simplecron
  puts 'enabled simplecron'

when 'disable'
  exit 0 unless is_enabled?

  disable_simplecron
  puts 'disabled simplecron'

when 'run'
  exit 0 unless File.file? config_file
  
  task_list = File.readlines(config_file)
  task_list.reject! { |l| l.include?('#') }
  
  task_list.each do |l|
    job = l.split(',')
    
    command = job[2].strip
    period = convert_to_seconds(job[1])
    control = job[0].strip 

    control_file = "#{cache_folder}/#{control}.rec"
    log_file = "#{cache_folder}/#{control}.log"

    time_sucess, time_try, fail_count = read_data(control_file)
   
    if fail_count == 0 
      time_next = time_sucess + period
    else
      time_next = time_try + delay(fail_count)
    end


    if time_now >= time_next
      File.write(log_file, log_stamp(control), mode: 'a')
      exit_code = `#{command} >> #{log_file} 2>&1; echo $?`.to_i
       
      if exit_code == 0
        time_stamp = "#{time_now} #{time_now}"
        fail_count = 0
        message = ":: Exit Code: 0.\n"
      else
        time_stamp = "#{time_sucess} #{time_now}"
        fail_count += 1
        message = ":: Exit Code: #{exit_code}. "
        message += "Next attempt in #{delay(fail_count)/60} min.\n"
      end 
      File.write(log_file, message, mode: 'a') 
      File.write(control_file, "#{time_stamp} #{fail_count}", mode: 'w')
    end
  end

else
  puts "No option for simplecron: '#{option}'"

end
